type Mutation {
    # Create a new match
    createMatch(match: CreateMatchInput!): Match
    # Create a new player
    createPlayer(player: CreatePlayerInput!): Player
    # Create a new tennis referee
    createTennisReferee(referee: CreateTennisRefereeInput!): TennisReferee
    # Create a new stadium
    createStadium(stadium: CreateStadiumInput!): Stadium

    # Update a tennis referee (PUT behavior)
    updateTennisReferee(referee: UpdateTennisRefereeInput!): TennisReferee
    # Update a player (PUT behavior)
    updatePlayer(player: UpdatePlayerInput!): Player
    # Update a stadium (PUT behavior)
    updateStadium(stadium: UpdateStadiumInput!): Stadium
    # Update a match (PUT behavior)
    updateMatch(match: UpdateMatchInput!): Match
}

# Input required to create a new player
input CreatePlayerInput {
    # The player's full name
    name: String!
    # Mugshot URL
    image: String!
    # Birthday
    birth: Time!
    # Nationality (3 letters code)
    nationality: String!
    # Weight in kilograms
    weight: Int
    # Ranking
    ranking: Int
    # Number of titles
    titles: Int!
    # Height in centimeters
    height: Int
}

# Input required to update a player
input UpdatePlayerInput {
    # The player's ID
    id: ID!
    # The player's full name
    name: String!
    # Mugshot URL
    image: String!
    # Birthday
    birth: Time!
    # Nationality (3 letters code)
    nationality: String!
    # Weight in kilograms
    weight: Int
    # Ranking
    ranking: Int
    # Number of titles
    titles: Int!
    # Height in centimeters
    height: Int
}

# Input required to create a new tennis referee
input CreateTennisRefereeInput {
    # The referee's full name
    name: String!
}

input UpdateTennisRefereeInput {
    # The referee's ID
    id: ID!
    # The referee's full name
    name: String!
}

# Input required to create a new match
input CreateMatchInput {
    # The datetime when the match will take place
	date: Time!
    # The IDs of all the home team players
    homePlayersLinks: [ID!]!
    # The IDs of all the away team players
    awayPlayersLinks: [ID!]!
    # The ID of the referee who will arbitrate the match
    refLink: ID!
    # The ID of the stadium where the match will be played
    stdLink: ID!
}

input UpdateMatchInput {
    # The match ID
    id: ID!
    # The datetime when the match will take place
	date: Time!
    # The IDs of all the home team players
    homePlayersLinks: [ID!]!
    # The IDs of all the away team players
    awayPlayersLinks: [ID!]!
    # The ID of the referee who will arbitrate the match
    refLink: ID!
    # The ID of the stadium where the match will be played
    stdLink: ID!
}

input CreateStadiumInput {
    # Type of ground (grass, clay ...)
    groundType: String!
    # Stadium name
    name: String!
    # City where the stadium is located
    city: String!
}

input UpdateStadiumInput {
    # The stadium ID
    id: ID!
    # Type of ground (grass, clay ...)
    groundType: String!
    # Stadium name
    name: String!
    # City where the stadium is located
    city: String!
}
